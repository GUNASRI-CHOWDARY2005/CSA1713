from itertools import permutations

def solve_cryptarithmetic():
    letters = 'SENDMORY'  # Unique letters in the equation
    digits = range(10)

    for perm in permutations(digits, len(letters)):
        mapping = dict(zip(letters, perm))
        
        # Skip numbers where leading digit is zero
        if mapping['S'] == 0 or mapping['M'] == 0:
            continue

        send = 1000 * mapping['S'] + 100 * mapping['E'] + 10 * mapping['N'] + mapping['D']
        more = 1000 * mapping['M'] + 100 * mapping['O'] + 10 * mapping['R'] + mapping['E']
        money = 10000 * mapping['M'] + 1000 * mapping['O'] + 100 * mapping['N'] + 10 * mapping['E'] + mapping['Y']

        if send + more == money:
            print("Solution found:")
            for k in sorted(mapping):
                print(f"{k} = {mapping[k]}")
            print(f"\n  {send}\n+ {more}\n= {money}")
            return  # stop after first solution

    print("No solution found.")

# Run the solver
solve_cryptarithmetic()
